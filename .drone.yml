platform: linux/arm

workspace:
  base: /go
  path: src/github.com/armswarm/drone

clone:
  git:
    image: armswarmdrone/git

pipeline:
  prepare:
    image: quay.io/armswarm/golang:1.8-alpine
    environment:
      - VERSION=master
    commands:
      - echo "${VERSION}"
      - go get -d github.com/drone/drone/drone
      - cd $GOPATH/src/github.com/drone/drone
      - git checkout "${VERSION}"

  test:
    image: quay.io/armswarm/golang:1.8-alpine
    commands:
      - go get -u github.com/drone/drone-ui/dist
      - go test -cover $(go list github.com/drone/drone/... | grep -v /vendor/)

  # test_postgres:
  #   image: quay.io/armswarm/golang:1.8-alpine
  #   environment:
  #     - DATABASE_DRIVER=postgres
  #     - DATABASE_CONFIG=host=postgres user=postgres dbname=postgres sslmode=disable
  #   commands:
  #     - go test github.com/drone/drone/store/datastore

  build:
    image: quay.io/armswarm/golang:1.8-alpine
    environment:
      - CGO_ENABLED=0
    commands:
      - go build -ldflags "-extldflags '-static' -X github.com/drone/drone/version.VersionDev=build.${DRONE_BUILD_NUMBER}" -o drone github.com/drone/drone/drone
    when:
      event: push

  publish:
    image: armswarmdrone/docker
    repo: quay.io/armswarm/drone
    tag: [ "0.6.0", "0.6", "latest" ]
    when:
      branch: master
      event: push

   notify:
    image: armswarmdrone/slack
    when:
      status: [ failure, success ]

# services:
#   postgres:
#     image: armswarm/postgres:9.5.4
#     environment:
#       - POSTGRES_USER=postgres
